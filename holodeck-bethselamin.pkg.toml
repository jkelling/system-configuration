[package]
name        = "holodeck-bethselamin"
version     = "1.4.0"
description = "holodeck: services on Bethselamin"

requires = [
    "hologram-base-hetzner",
    "ferm",
    "grub",
    # web services
    "hologram-nginx",
    "ages-website",
    "gogs",
    "sqlite", # for gogs
    "todolist",
    # additional services
    "murmur",
]

definitionFile = "/usr/share/holo/users-groups/50-bethselamin.toml"

################################################################################
# identity

[[file]]
path    = "/etc/hostname"
content = "bethselamin"

[[file]]
path    = "/etc/profile.d/prettyprompt.sh"
content = """
    export PRETTYPROMPT_COMMONUSER=stefan
    export PRETTYPROMPT_HOSTCOLOR='0;31'
"""

################################################################################
# network interface configuration as generated by Hetzner's installimage

[[file]]
path    = "/etc/systemd/network/50-hetzner.network"
content = """
    [Match]
    MACAddress=${BETHSELAMIN_MACADDR}

    [Network]
    Address=${BETHSELAMIN_IP6ADDR}/64
    Gateway=fe80::1

    Address=172.31.1.100/24
    Gateway=172.31.1.1
"""
[[symlink]]
path   = "/usr/share/holo/files/50-bethselamin-vars/etc/systemd/network/50-hetzner.network.holoscript"
target = "/my/variables"

################################################################################
# firewall

[[symlink]]
path   = "/etc/systemd/system/multi-user.target.wants/ferm.service"
target = "/usr/lib/systemd/system/ferm.service"

[[file]]
path    = "/usr/share/holo/files/50-bethselamin/etc/ferm.conf"
content = """
    table filter {
        chain INPUT {
            policy DROP;

            # connection tracking
            mod state state INVALID DROP;
            mod state state (ESTABLISHED RELATED) ACCEPT;

            # allow local connections
            interface lo ACCEPT;

            # respond to ping
            proto icmp icmp-type echo-request ACCEPT;

            # allow SSH, HTTP, HTTPS
            proto tcp dport ssh ACCEPT;
            proto tcp dport http ACCEPT;
            proto tcp dport https ACCEPT;

            # allow Mumble on non-standard port
            proto tcp dport 64001 ACCEPT;

            # the rest is dropped by the above policy
        }

        # outgoing connections are not limited
        chain OUTPUT policy ACCEPT;

        # this is not a router
        chain FORWARD policy DROP;
    }
"""

################################################################################
# web services: gogs

[[symlink]]
path   = "/etc/systemd/system/multi-user.target.wants/gogs.service"
target = "/usr/lib/systemd/system/gogs.service"

[[file]]
path    = "/etc/nginx/sites-enabled/gogs.conf"
content = '''
    server {
        server_name git.bethselamin.de;
        include     /etc/nginx/server-baseline-https.inc;

        add_header  Content-Security-Policy "default-src 'self'" always;

        ssl_certificate     /etc/letsencrypt/live/git.bethselamin.de/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/git.bethselamin.de/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/git.bethselamin.de/chain.pem;

        location / {
            proxy_pass http://localhost:3000;
        }
    }
'''

################################################################################
# web services: todolist

[[file]]
path    = "/etc/nginx/sites-enabled/todolist.conf"
content = '''
    server {
        server_name todolist.bethselamin.de;
        include     /etc/nginx/server-baseline-https.inc;

        add_header  Content-Security-Policy "default-src 'self' 'unsafe-inline'" always; # unsafe-inline for <style> tag to work

        ssl_certificate     /etc/letsencrypt/live/todolist.bethselamin.de/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/todolist.bethselamin.de/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/todolist.bethselamin.de/chain.pem;

        location / {
            proxy_pass http://localhost:8113;
            proxy_set_header Authorization $http_authorization;
            proxy_pass_header Authorization;
        }
    }

'''

[[group]]
name   = "todolist"
system = true

[[user]]
name   = "todolist"
group  = "todolist"
system = true
home   = "/var/lib/todolist"

[[directory]]
path  = "/var/lib/todolist"
owner = "todolist"
group = "todolist"

[[file]]
path    = "/usr/lib/systemd/system/todolist.service"
content = """
    [Unit]
    Description=Minimalistic web-based todolist app

    [Service]
    ExecStart=/usr/bin/todolist -port 8113
    WorkingDirectory=/var/lib/todolist
    User=todolist

    [Install]
    WantedBy=multi-user.target
"""

[[symlink]]
path   = "/etc/systemd/system/multi-user.target.wants/todolist.service"
target = "/usr/lib/systemd/system/todolist.service"

################################################################################
# web services: ages-skripte.org

[[file]]
path    = "/etc/nginx/sites-enabled/ages-website.conf"
content = '''
    # redirect ages-skripte.org (without www) to www.ages-skripte.org
    server {
        server_name ages-skripte.org;
        listen 80;
        location / {
            return 301 https://www.ages-skripte.org$request_uri;
        }
    }

    server {
        server_name www.ages-skripte.org;
        include     /etc/nginx/server-baseline-https.inc;

        add_header  Content-Security-Policy "default-src 'self' 'unsafe-inline'" always; # unsafe-inline for <style> tag to work

        ssl_certificate     /etc/letsencrypt/live/www.ages-skripte.org/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/www.ages-skripte.org/privkey.pem;
        ssl_trusted_certificate /etc/letsencrypt/live/www.ages-skripte.org/chain.pem;

        location / {
            root /usr/share/ages-website/;
        }
    }

'''

################################################################################
# misc. services: Mumble/Murmur

[[symlink]]
path   = "/etc/systemd/system/multi-user.target.wants/murmur.service"
target = "/usr/lib/systemd/system/murmur.service"

[[file]]
path    = "/usr/share/holo/files/50-bethselamin/etc/murmur.ini"
content = '''
    # database
    database=/var/lib/murmur/murmur.sqlite

    # runtime
    uname=murmur
    dbus=system

    # connection
    port=64001      # non-standard (historical)
    sslCert=/etc/letsencrypt/live/${MURMUR_DOMAIN}/fullchain.pem
    sslKey=/etc/letsencrypt/live/${MURMUR_DOMAIN}/privkey.pem
    # SSL cipher suite from https://wiki.mozilla.org/Security/Server_Side_TLS
    sslCipher=ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK

    # limits
    serverpassword=${MURMUR_SERVERPASSWORD}
    bandwidth=72000 # bits/sec per user
    users=100       # max. number of users

    # strings
    welcometext="${MURMUR_WELCOME_TEXT}"
    allowhtml=false
'''
[[symlink]]
path   = "/usr/share/holo/files/50-bethselamin-vars/etc/murmur.ini.holoscript"
target = "/my/variables"
